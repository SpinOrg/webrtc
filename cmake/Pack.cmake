if(WIN32)
    set(WEBRTC_PACK_PLATFORM win)
elseif(APPLE)
    set(WEBRTC_PACK_PLATFORM darwin)
else()
    set(WEBRTC_PACK_PLATFORM linux)
endif()

string(TOLOWER ${CMAKE_HOST_SYSTEM_PROCESSOR} WEBRTC_PACK_ARCHITECTURE)
if(ARCH)
    set(WEBRTC_PACK_ARCHITECTURE ${ARCH})
endif()

set(WEBRTC_PACK_NAME webrtc-${WEBRTC_PACK_PLATFORM}-${WEBRTC_PACK_ARCHITECTURE}-${WEBRTC_BUILD_TYPE})
if(NOAUDIO)
    set(WEBRTC_PACK_NAME ${WEBRTC_PACK_NAME}-noaudio)
endif()
if(WEBRTC_BUILD_TYPE STREQUAL debug AND NOLOG)
    set(WEBRTC_PACK_NAME ${WEBRTC_PACK_NAME}-nolog)
endif()
set(WEBRTC_PACK_NAME ${WEBRTC_PACK_NAME}.zip)
set(WEBRTC_PACK ${CMAKE_INSTALL_PREFIX}/${WEBRTC_PACK_NAME})

set(WEBRTC_CONFIG ${CMAKE_INSTALL_PREFIX}/CMakeLists.txt)

add_custom_command(
    OUTPUT ${WEBRTC_PACK}
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_LIST_DIR}/PackCMakeLists.txt.in ${WEBRTC_CONFIG}
    COMMAND ${CMAKE_COMMAND} -E tar cf ${WEBRTC_PACK} --format=zip ${WEBRTC_LIB_FOLDER} ${WEBRTC_HEADERS_FOLDER} ${WEBRTC_CONFIG}
    WORKING_DIRECTORY ${CMAKE_INSTALL_PREFIX}
)

add_custom_target(pack DEPENDS ${WEBRTC_PACK})
add_dependencies(pack setup)
