cmake_minimum_required(VERSION 3.14)

project(webrtc NONE)

include(GNUInstallDirs)

add_library(${PROJECT_NAME} INTERFACE)

file(GLOB WEBRTC_LIBRARIES "lib/*")
target_link_libraries(${PROJECT_NAME} INTERFACE ${WEBRTC_LIBRARIES})

target_include_directories(${PROJECT_NAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
target_include_directories(${PROJECT_NAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/webrtc>)
target_include_directories(${PROJECT_NAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/webrtc/third_party/abseil-cpp>)
target_include_directories(${PROJECT_NAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/webrtc/third_party/libyuv/include>)

if(WIN32)
    target_compile_definitions(${PROJECT_NAME} INTERFACE WEBRTC_WIN=1)
    target_link_libraries(${PROJECT_NAME} INTERFACE Winmm.lib Secur32.lib Msdmo.lib Wmcodecdspuuid.lib Dmoguids.lib)
elseif(APPLE)
    find_library(AUDIOTOOLBOX_LIBRARY AudioToolbox)
    find_library(COREAUDIO_LIBRARY CoreAudio)
    find_library(COREFOUNDATION_LIBRARY CoreFoundation)
    find_library(COREGRAPHICS_LIBRARY CoreGraphics)
    find_library(FOUNDATION_LIBRARY Foundation)

    target_compile_definitions(${PROJECT_NAME} INTERFACE WEBRTC_MAC=1 WEBRTC_POSIX=1)
    target_link_libraries(${PROJECT_NAME} INTERFACE ${AUDIOTOOLBOX_LIBRARY} ${COREAUDIO_LIBRARY} ${COREFOUNDATION_LIBRARY} ${COREGRAPHICS_LIBRARY} ${FOUNDATION_LIBRARY})
else()
    target_compile_definitions(${PROJECT_NAME} INTERFACE WEBRTC_LINUX=1 WEBRTC_POSIX=1)
    target_link_libraries(${PROJECT_NAME} INTERFACE dl)
endif()

install(DIRECTORY include/webrtc DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}-config INCLUDES DESTINATION)
install(EXPORT ${PROJECT_NAME}-config DESTINATION cmake)

add_library(${PROJECT_NAME}-boringssl INTERFACE)
target_include_directories(${PROJECT_NAME}-boringssl INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/webrtc/third_party/boringssl/src/include>)
target_link_libraries(${PROJECT_NAME}-boringssl INTERFACE ${WEBRTC_LIBRARIES})
install(TARGETS ${PROJECT_NAME}-boringssl EXPORT ${PROJECT_NAME}-boringssl-config INCLUDES DESTINATION)
install(EXPORT ${PROJECT_NAME}-boringssl-config DESTINATION cmake)
